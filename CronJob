Assignment No 2 - CronJob
A.[root@ip-172-31-30-193 ~]# cd /root/kubernetes-training/04-controllers
[root@ip-172-31-30-193 04-controllers]# pwd
/root/kubernetes-training/04-controllers
[root@ip-172-31-30-193 04-controllers]#
 
B.[root@ip-172-31-30-193 04-controllers]# cat cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: batch-job-every-fifteen-minutes
spec:
  schedule: "0,15,30,45 * * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: periodic-batch-job
        spec:
          restartPolicy: OnFailure
          containers:
          - name: main
            image: luksa/batch-job
[root@ip-172-31-30-193 04-controllers]#

C. [root@ip-172-31-30-193 04-controllers]# kubectl apply -f cronjob.yaml
cronjob.batch/batch-job-every-fifteen-minutes unchanged

D. [root@ip-172-31-30-193 04-controllers]# kubectl get job
NAME                                         COMPLETIONS   DURATION   AGE
batch-job-every-fifteen-minutes-1656939600   1/1           2m8s       42m
batch-job-every-fifteen-minutes-1656940500   1/1           2m6s       27m
batch-job-every-fifteen-minutes-1656941400   1/1           2m5s       12m
[root@ip-172-31-30-193 04-controllers]#

E. [root@ip-172-31-30-193 ~]# kubectl delete job batch-job-every-fifteen-minutes-1656943200
job.batch "batch-job-every-fifteen-minutes-1656943200" deleted
[root@ip-172-31-30-193 ~]#

F. Jobs are used to create transient pods that perform specific tasks they are assigned to. 
   CronJobs do the same thing, but they run tasks based on a defined schedule.
